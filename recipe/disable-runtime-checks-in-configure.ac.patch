From c24aeee6ddae3e5b29359ec3e3b03470750b987e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Julian=20R=C3=BCth?= <julian.rueth@fsfe.org>
Date: Wed, 1 Dec 2021 17:14:16 -0600
Subject: [PATCH] disable runtime checks in configure.ac

---
 configure.ac | 68 ----------------------------------------------------
 1 file changed, 68 deletions(-)

diff --git a/configure.ac b/configure.ac
index 2910f9b..91afc88 100644
--- a/configure.ac
+++ b/configure.ac
@@ -45,47 +45,6 @@ elif test "$with_pari" = "yes"; then
     AC_MSG_ERROR([PARI support requested but PARI was not found])
 fi
 
-AC_MSG_CHECKING([for emms instruction])
-# We add the "leal" instruction to reduce false positives in case some
-# non-x86 architecture also has an "emms" instruction.
-AC_RUN_IFELSE([AC_LANG_PROGRAM([[]], [[asm("leal (%eax), %eax; emms");]])],
-    dnl YES
-    [AC_MSG_RESULT([yes])]
-    AC_DEFINE(HAVE_EMMS, 1, [Define to 1 if your processor understands the "emms" instruction.])
-    ,
-    dnl NO
-    [AC_MSG_RESULT([no])]
-)
-
-AC_MSG_CHECKING([whether setjmp() saves the signal mask])
-AC_RUN_IFELSE([AC_LANG_PROGRAM(
-    [[
-    #include <stdlib.h>
-    #include <setjmp.h>
-    #include <signal.h>
-    ]],
-    [[
-    jmp_buf env;
-    sigset_t set;
-    sigemptyset(&set);
-    if (sigprocmask(SIG_SETMASK, &set, NULL)) return 2;
-    if (setjmp(env) == 0)
-    {
-        sigaddset(&set, SIGFPE);
-        if (sigprocmask(SIG_SETMASK, &set, NULL)) return 3;
-        longjmp(env, 1);
-    }
-    if (sigprocmask(SIG_SETMASK, NULL, &set)) return 4;
-    return sigismember(&set, SIGFPE);
-    ]])],
-    dnl YES
-    [AC_MSG_RESULT([yes])]
-    sigsetjmp=yes
-    ,
-    dnl NO
-    [AC_MSG_RESULT([no])]
-)
-
 AC_MSG_CHECKING([for GNU libc])
 AC_COMPILE_IFELSE([AC_LANG_SOURCE(
     [[
@@ -107,33 +66,6 @@ if test x$sigsetjmp = xyes; then
     AC_DEFINE(CYSIGNALS_USE_SIGSETJMP, 1, [Define to 1 to use sigsetjmp() in sig_on(), as opposed to setjmp().])
 fi
 
-AC_MSG_CHECKING([for assembly implementation of cysetjmp])
-AC_RUN_IFELSE([AC_LANG_SOURCE(
-    [[
-    #define CYSIGNALS_ASM_CYSETJMP 1
-    #include <unistd.h>
-    #include "src/cysignals/cysetjmp.h"
-    int main(void) {
-        cyjmp_buf jmp_buf;
-        int ret;
-        alarm(1);  // kill the process if it runs off into the weeds
-        ret = cysetjmp(jmp_buf);
-        if (ret != 0) {
-            return !ret;
-        }
-
-        cylongjmp(jmp_buf, 1);
-        return 1;
-    }
-    ]])],
-    dnl YES
-    [AC_MSG_RESULT([yes])]
-    AC_DEFINE(CYSIGNALS_ASM_CYSETJMP, 1, [Define to 1 to use an assembly implementation of cysetjmp().])
-    ,
-    dnl NO
-    [AC_MSG_RESULT([no])]
-)
-
 dnl Check for atomic operations
 AC_MSG_CHECKING([for _Atomic in C code])
 AC_COMPILE_IFELSE([AC_LANG_SOURCE(
-- 
2.34.1

